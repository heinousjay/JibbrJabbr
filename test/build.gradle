import java.io.File;


apply plugin: PhantomJSSetupPlugin

class PhantomJSSetupPlugin implements Plugin<Project> {
    void apply(Project project) {
		
		def rootDir = "${project.buildDir}/phantomjs"
		def executable = "${rootDir}/bin/phantomjs"
		def needsPermissionChange = true
		def classifier = { os, arch ->
			if (os == 'Mac OS X') {
				'macosx'
			} else if (os =~ /^Windows/) {
				needsPermissionChange = false
				executable = "${rootDir}/phantomjs.exe"
				'windows'
			} else if (os == 'Linux' && arch =~ '64') {
				'linux-64'
			} else if (os == 'Linux') {
				'linux-32'
			} else {
				'unsupported-operating-system'
			}
		}(System.getProperty('os.name'), System.getProperty("sun.arch.data.model"))
		
		project.repositories {
			mavenCentral()
		}
		
		project.afterEvaluate {
			project.configurations.create('phantomJS')
			project.dependencies.add('phantomJS', "org.jboss.arquillian.extension:arquillian-phantom-binary:1.9.7:${classifier}")
		
			project.task('setUpPhantomJS', type:Copy) {
				
				// there's only one jar in the file, so just get the first one
				from project.zipTree(project.configurations.phantomJS.files.find { true })
				include 'bin/phantomjs'
				include 'phantomjs.exe'
				
				into rootDir
				
				if (needsPermissionChange) {
					doLast {
						ant.chmod(file:executable, perm:'700')
					}
				}
			}
			
			project.tasks.withType(Test) {
				systemProperty 'phantomjs.binary.path', executable
				dependsOn project.tasks.setUpPhantomJS
			}
		}
	}
}

repositories {
	//mavenLocal()
	maven {
	url 'https://oss.sonatype.org/content/repositories/snapshots/'
	}
}

dependencies {
	
	compile configurations.core
	compile configurations.testPack
	compile project(":kernel")
	compile group: 'com.jibbrjabbr', name: 'pandia', version: '0.5-SNAPSHOT', changing: true
	compile 'org.seleniumhq.selenium:selenium-java:2.44.0'
	compile 'org.seleniumhq.selenium:selenium-remote-driver:2.44.0'
	compile 'org.seleniumhq.selenium:selenium-server:2.44.0'
}

test {
	inputs.file project(':').jar.archivePath
	
	minHeapSize = "128m"
	maxHeapSize = "512m"
}
