/*
 *    Copyright 2012 Jason Miller
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package jj.webdriver;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

/**
 * <p>
 * A unit of interaction for driving a browser.  Extend this interface
 * with an interface declaring driver methods annotated with {@link By}
 * for location purposes.
 * 
 * <p>
 * The implementation is generated by matching patterns in the method declarations.
 * for instance, given
 * <pre>
 * public interface MyPanel {
 * 
 * 	{@literal @}By("button-id") 
 * 	MyPanel clickButton();
 * 
 * 	{@literal @}By("input-id")
 * 	MyPanel setInput(String input);
 * 
 * }
 * </pre>
 * 
 * calling clickButton will
 * 
 * <ol>
 * <li>log the panel name, the action, and the computed locator as a {@link org.openqa.selenium.By}
 * <li>look for the {@link WebElement} in the current {@link WebDriver} and call click on it
 * <li>return the current {@code MyPanel} instance, for fluent chaining
 * </ol>
 * 
 * @author jason
 *
 * @see Page
 */
public interface Panel {

}
