less script must be modified to update - the environment detection should be hardcoded to the rhino case.  it is
designed to find the rhino shell stuff, and we really only define the few pieces we need:

readFile = function to read a file by name, relative to basePath

print = output a string to the log

also, the shims can be removed

need to fix use of the global "name" to be the supplied function instead

the script changes look like 

var name;

function loadStyleSheet(sheet, callback, reload, remaining) {
    var endOfPath = Math.max(name().lastIndexOf('/'), name().lastIndexOf('\\')),
        sheetName = name().slice(0, endOfPath + 1) + sheet.href,
        contents = sheet.contents || {},
        input = readFile(sheetName);
        
    contents[sheetName] = input;
        
    var parser = new less.Parser({
        paths: [sheet.href.replace(/[\w\.-]+$/, '')],
        contents: contents
    });
    parser.parse(input, function (e, root) {
        if (e) {
            return error(e, sheetName);
        }
        try {
            callback(e, root, input, sheet, { local: false, lastModified: 0, remaining: remaining }, sheetName);
        } catch(e) {
            error(e, sheetName);
        }
    });
}

function print(arg) {
	java.lang.System.out.println(arg);
}

function runLess(baseName, compress) {
	name(baseName);
	var input = readFile(baseName);
	if (!input) {
        error('lesscss: couldn\'t open file', baseName);
        return;
    }

	var result;
    try {
        var parser = new less.Parser();
        parser.parse(input, function (e, root) {
            if (e) {
                error(e, baseName);
            } else {
                result = root.toCSS({compress: compress || false});
            }
        });
    }
    catch(e) {
        error(e, baseName);
        return;
    }
    
    return result;
}


function error(e, filename) {

    var content = "Error : " + filename + "\n";
    
    filename = e.filename || filename;
    
    if (e.message) {
        content += e.message + "\n";
    }

    var errorline = function (e, i, classname) {
        if (e.extract[i]) {
            content += 
                String(parseInt(e.line) + (i - 1)) + 
                ":" + e.extract[i] + "\n";
        }
    };

    if (e.stack) {
        content += e.stack;
    } else if (e.extract) {
        content += 'on line ' + e.line + ', column ' + (e.column + 1) + ':\n';
        errorline(e, 0);
        errorline(e, 1);
        errorline(e, 2);
    }
   print(content);
}